diff --git a/companion/src/CMakeLists.txt b/companion/src/CMakeLists.txt
--- a/companion/src/CMakeLists.txt
+++ b/companion/src/CMakeLists.txt
@@ -600,56 +600,4 @@ if(APPLE)
   set(CPACK_PACKAGE_FILE_NAME "edgetx-${CPACK_PACKAGE_NAME_LOWERCASE}-${VERSION}")
 endif(APPLE)
 
-if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
-  set(LINUXDEPLOY_APPIMAGE "linuxdeploy-x86_64.AppImage")
-  set(LINUXDEPLOY_PLUGIN_QT "linuxdeploy-plugin-qt-x86_64.AppImage")
-  set(LINUXDEPLOY_URL "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous")
-  set(LINUXDEPLOY_PLUGIN_QT_URL "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous")
-  set(LINUXDEPLOY_DIRECTORY "${CMAKE_BINARY_DIR}/linuxdeploy")
-  set(LINUXDEPLOY_APP "${LINUXDEPLOY_DIRECTORY}/usr/bin/linuxdeploy")
-
-  if (NOT EXISTS "${LINUXDEPLOY_DIRECTORY}")
-    message(STATUS "Downloading linuxdeploy and plugins...")
-
-    file(DOWNLOAD "${LINUXDEPLOY_URL}/${LINUXDEPLOY_APPIMAGE}" "${CMAKE_BINARY_DIR}/${LINUXDEPLOY_APPIMAGE}")
-    file(DOWNLOAD "${LINUXDEPLOY_PLUGIN_QT_URL}/${LINUXDEPLOY_PLUGIN_QT}" "${CMAKE_BINARY_DIR}/${LINUXDEPLOY_PLUGIN_QT}")
-
-    message(STATUS "Downloading linuxdeploy and plugins finished")
-
-    # for security reasons by default AppImages are prohibited from running in Docker containers
-    # so extract Appimage contents and run as normal apps
-
-    file(GLOB linuxdeployfiles ${CMAKE_BINARY_DIR}/linuxdeploy*.AppImage)
-
-    foreach(file ${linuxdeployfiles})
-      execute_process(
-        COMMAND chmod +x "${file}"
-        WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
-
-      execute_process(
-        COMMAND "${file}" --appimage-extract
-        WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
-
-      file(REMOVE "${file}")
-    endforeach()
-
-    file(REMOVE_RECURSE "${LINUXDEPLOY_DIRECTORY}")
-
-    execute_process(
-      COMMAND mv "${CMAKE_BINARY_DIR}/squashfs-root" "${LINUXDEPLOY_DIRECTORY}"
-      WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
-
-    # test installation
-    #execute_process(
-    #  COMMAND ${LINUXDEPLOY_APP} --list-plugins
-    #  WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
-  endif()
-
-  set(CPACK_PACKAGE_DIRECTORY "${CMAKE_BINARY_DIR}")
-  set(CPACK_GENERATOR "External")
-
-  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CPackLinuxDeploy.cmake.in "${CMAKE_BINARY_DIR}/CPackExternal.cmake" @ONLY)
-  set(CPACK_EXTERNAL_PACKAGE_SCRIPT "${CMAKE_BINARY_DIR}/CPackExternal.cmake")
-endif()
-
-include(CPack)
\ No newline at end of file
+include(CPack)
